<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:HanumanInstitute.Converter432hz"
             x:Class="HanumanInstitute.Converter432hz.App">
    <Application.DataTemplates>
        <local:ViewLocator />
    </Application.DataTemplates>
    <Application.Resources>
        <Color x:Key="WindowBackgroundGradiant">#dd9494</Color>
        <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="50%,100%" StartPoint="50%,0%">
            <GradientStop Color="White" Offset="0" />
            <GradientStop Color="{StaticResource WindowBackgroundGradiant}" Offset="1" />
        </LinearGradientBrush>
    </Application.Resources>

    <Application.Styles>
        <FluentTheme Mode="Light" />
        <StyleInclude Source="avares://Avalonia.Controls.DataGrid/Themes/Fluent.xaml" />
        <!--
        <StyleInclude Source="avares://MediaPlayer.Avalonia/Styles/Default/Theme.axaml" />
        <StyleInclude Source="avares://MediaPlayer.Avalonia/Styles/Colors/Gray.axaml" />
        -->

        <Style Selector="Window">
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>
        <Style Selector="Grid.GradiantBackground">
            <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
        </Style>
        <Style Selector="Button.round">
            <Setter Property="Height" Value="26" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="CornerRadius" Value="14" />
        </Style>
        <Style Selector="Button.round:disabled">
            <Setter Property="Opacity" Value="0.5" />
        </Style>
        <Style Selector="ListBox">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <ControlTemplate>
                    <DataValidationErrors>
                        <Border Name="border"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <ScrollViewer Name="PART_ScrollViewer"
                                          HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                          VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                          AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}">
                                <ItemsPresenter Name="PART_ItemsPresenter"
                                                Items="{TemplateBinding Items}"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                ItemTemplate="{TemplateBinding ItemTemplate}"
                                                Margin="{TemplateBinding Padding}"
                                                VirtualizationMode="{TemplateBinding VirtualizationMode}" />
                            </ScrollViewer>
                        </Border>
                    </DataValidationErrors>
                </ControlTemplate>
            </Setter>
        </Style>
        <Style Selector="ListBox:error /template/ Border#Background">
            <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
        </Style>
        <Style Selector="ListBoxItem > TextBlock">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="ListBox.compact ListBoxItem">
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="ListBox.compact ListBoxItem > TextBlock">
            <Setter Property="Padding" Value="4" />
        </Style>
        <Style Selector="TextBox.compact">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Height" Value="24" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Padding" Value="4,2,4,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0"/>
        </Style>
        <Style
            Selector="TextBox.compact:pointerover /template/ Border#PART_BorderElement, 
            TextBox.compact:focus /template/ Border#PART_BorderElement, 
            ComboBox.compact:pointerover /template/ Border#Background2">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="ComboBox.compact">
            <!-- <Setter Property="Background" Value="Transparent" /> -->
            <Setter Property="Height" Value="24" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Padding" Value="4,2,4,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style Selector="ComboBox.compact ComboBoxItem">
            <Setter Property="Padding" Value="2" />
        </Style>
        <!--Use Classes="RadioButtonListBox" in any ListBox to represent its items as RadioButtons-->
        <Style Selector="ListBox.RadioButtonListBox">
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <Style Selector="ListBox.RadioButtonListBox ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="Transparent">
                            <RadioButton Content="{TemplateBinding ContentPresenter.Content}"  
                                         VerticalAlignment="Center"
                                         IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="DataGrid.NoSelect DataGridRow:pointerover /template/ Rectangle#BackgroundRectangle">
            <Setter Property="Fill" Value="Transparent" />
        </Style>
        <Style Selector="DataGrid.NoSelect DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
            <Setter Property="Fill" Value="Transparent" />
        </Style>
        <Style Selector="DataGrid.NoSelect DataGridRow:selected:pointerover /template/ Rectangle#BackgroundRectangle">
            <Setter Property="Fill" Value="Transparent" />
        </Style>
        <Style Selector="DataGrid.NoSelect DataGridRow:selected:focus /template/ Rectangle#BackgroundRectangle">
            <Setter Property="Fill" Value="Transparent" />
        </Style>
        <Style Selector="DataGrid.NoSelect:focus DataGridCell:current /template/ Grid#FocusVisual">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="DataValidationErrors">
            <Setter Property="Template" Value="{DynamicResource TooltipDataValidationContentTemplate}" />
            <Setter Property="ErrorTemplate" Value="{DynamicResource TooltipDataValidationErrorTemplate}" />
        </Style>
        
        <Style Selector="Button.link">
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <ControlTemplate>
                    <ContentPresenter Content="{TemplateBinding Content}">
                        <ContentPresenter.Styles>
                            <Style Selector="TextBlock">
                                <Setter Property="Foreground" Value="{TemplateBinding Foreground}"/>
                                <Setter Property="FontSize" Value="{TemplateBinding FontSize}"/>
                                <Setter Property="TextDecorations" Value="Underline"/>
                            </Style>
                        </ContentPresenter.Styles>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter>
        </Style>
    </Application.Styles>
</Application>