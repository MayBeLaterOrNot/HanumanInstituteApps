<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HanumanInstitute.Player432Hz"
        xmlns:vm="clr-namespace:HanumanInstitute.Player432Hz.ViewModels"
        mc:Ignorable="d" MinWidth="290" Width="290" MaxWidth="290" MinHeight="400" Height="400" MaxHeight="400"
        x:Class="HanumanInstitute.Player432Hz.Views.SettingsView"
        Title="Settings" Classes="gradient"
        CanResize="False" ShowInTaskbar="False" WindowStartupLocation="CenterOwner"
        d:DataContext="{x:Static local:ViewModelLocator.Settings}" x:DataType="vm:SettingsViewModel">
    <Grid>
        <Grid Margin="10">
            <StackPanel>
                <StackPanel.Styles>
                    <Style Selector="StackPanel">
                        <Setter Property="Margin" Value="0,0,0,8"></Setter>
                    </Style>
                </StackPanel.Styles>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Theme" VerticalAlignment="Center" />
                    <ComboBox Margin="20,0,0,0" Width="130" Items="{Binding ThemeList}" x:CompileBindings="false"
                              SelectedItem="{Binding ThemeList.CurrentItem}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Check for Updates" VerticalAlignment="Center" />
                    <ComboBox Margin="12,0,0,0" Width="105" Items="{Binding CheckForUpdateList}"
                              x:CompileBindings="false"
                              SelectedItem="{Binding CheckForUpdateList.CurrentItem}" />
                </StackPanel>
                <StackPanel Margin="0">
                    <CheckBox IsChecked="{Binding Settings.AntiAlias}">Apply anti-alias filter</CheckBox>
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding Settings.AntiAlias}">
                        <TextBlock Text="Anti-alias length (8 - 128)  " VerticalAlignment="Center" />
                        <NumericUpDown Value="{Binding Settings.AntiAliasLength}" Width="80" Minimum="8" Maximum="128" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Speed multiplier  " VerticalAlignment="Center" />
                        <NumericUpDown Value="{Binding Settings.Speed}" Width="80" Minimum="0.01" Maximum="100" />
                    </StackPanel>
                    <CheckBox IsChecked="{Binding Settings.AutoDetectPitch}">Auto-detect source pitch</CheckBox>
                    <Grid RowDefinitions="26,26" ColumnDefinitions="Auto,40,Auto,Auto,Auto" Margin="0,0,0,8">
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Shift pitch" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="from" VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                        <NumericUpDown Grid.Row="0" Grid.Column="2" Value="{Binding Settings.PitchFrom}"
                                       IsEnabled="{Binding !Settings.AutoDetectPitch}" Minimum="1" Maximum="10000" />
                        <TextBlock Grid.Row="0" Grid.Column="3" Text=" Hz" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="to " VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                        <NumericUpDown Grid.Row="1" Grid.Column="2" Value="{Binding Settings.PitchTo}" Minimum="1"
                                       Maximum="10000" />
                        <TextBlock Grid.Row="1" Grid.Column="3" Text=" Hz" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="1" Grid.Column="4" VerticalAlignment="Center" Foreground="Red"
                                   Margin="12,0,0,0"
                                   Text="{Binding Player.PitchErrorHz, StringFormat={}{0:F2} Hz}"
                                   IsVisible="{Binding Player.PitchError, Converter={x:Static ObjectConverters.IsNotNull}}" />
                    </Grid>
                    <CheckBox IsChecked="{Binding Settings.RoundPitch}" Content="Round pitch for quality" />
                    <CheckBox IsChecked="{Binding Settings.SkipTempo}" Margin="0,-4,0,0"
                              Content="Skip tempo adjustment for quality" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" IsVisible="{Binding IsDeviceSampleRateVisible}">
                    <TextBlock Text="Output sample rate" VerticalAlignment="Center" />
                    <Grid Width="80" Margin="10,0,0,0">
                        <ComboBox Width="115" Items="{Binding OutputSampleRateList}" x:CompileBindings="false"
                                  SelectedItem="{Binding OutputSampleRateList.CurrentItem}" />
                    </Grid>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <StackPanel.Styles>
                    <Style Selector="Button">
                        <Setter Property="Margin" Value="3,0,0,0" />
                    </Style>
                </StackPanel.Styles>
                <Button Width="65" Classes="round" Command="{Binding RestoreDefault}" Content="Default" />
                <Button Width="65" Classes="round" Command="{Binding Apply}" Content="Apply" />
                <Button Width="65" Classes="round accent" Command="{Binding Ok}" IsDefault="True" Content="OK" />
                <Button Width="65" Classes="round" Command="{Binding Cancel}" IsCancel="true" Content="Cancel" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>