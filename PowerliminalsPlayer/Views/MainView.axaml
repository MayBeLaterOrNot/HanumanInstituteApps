<Window x:Class="HanumanInstitute.PowerliminalsPlayer.Views.MainView" x:Name="Win"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignHeight="380"
        Title="Powerliminals Player" MinWidth="680" MinHeight="270"
        Icon="/Assets/App.ico" Classes="gradient"
        xmlns:local="clr-namespace:HanumanInstitute.PowerliminalsPlayer"
        xmlns:media="clr-namespace:HanumanInstitute.MediaPlayer.Avalonia;assembly=MediaPlayer.Avalonia"
        xmlns:mediab="clr-namespace:HanumanInstitute.MediaPlayer.Avalonia.Bass;assembly=MediaPlayer.Avalonia.Bass"
        xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
        xmlns:vm="clr-namespace:HanumanInstitute.PowerliminalsPlayer.ViewModels"
        xmlns:views="clr-namespace:HanumanInstitute.PowerliminalsPlayer.Views"
        xmlns:av="clr-namespace:HanumanInstitute.Avalonia;assembly=HanumanInstitute.Avalonia"
        xmlns:ad="clr-namespace:HanumanInstitute.Apps.AdRotator;assembly=HanumanInstitute.Apps"
        av:SizeExtension.TrackSize="True"
        av:SizeExtension.Width="{Binding Settings.Width, Mode=TwoWay}"
        av:SizeExtension.Height="{Binding Settings.Height, Mode=TwoWay}"
        av:PositionExtension.Enabled="False"
        av:PositionExtension.Position="{Binding Settings.Position, Mode=TwoWay}"
        d:DataContext="{x:Static local:ViewModelLocator.Main}" x:DataType="vm:MainViewModel">
    <Window.Resources>
        <av:BooleanToStringConverter x:Key="BooleanToStringConverter" TrueValue="Resume" FalseValue="Pause All" />
    </Window.Resources>
    <Grid ColumnDefinitions="*,302">
        <Grid Column="0" Margin="10,5,10,5" RowDefinitions="48,Auto,Auto,*,Auto,30">
            <Grid Row="0">
                <StackPanel Orientation="Horizontal">
                    <Expander x:Name="FoldersExpander" Header="Folders" Height="90" Width="130" VerticalAlignment="Top"
                              TabIndex="1" FontWeight="Bold" IsExpanded="{Binding Settings.FoldersExpanded}" />
                    <Button Classes="round" TabIndex="2" Width="35" Margin="2,0,0,2"
                            VerticalAlignment="Bottom" Command="{Binding AddFolder}"
                            IsVisible="{Binding IsExpanded, ElementName=FoldersExpander}">
                        <ui:SymbolIcon Symbol="Add" FontSize="20" />
                    </Button>
                    <Button Classes="round" TabIndex="3" Width="35" Margin="0,0,0,2"
                            VerticalAlignment="Bottom" Command="{Binding RemoveFolder}"
                            IsVisible="{Binding IsExpanded, ElementName=FoldersExpander}">
                        <ui:SymbolIcon Symbol="Remove" FontSize="20" />
                    </Button>
                </StackPanel>
                <Grid HorizontalAlignment="Right" Width="100">
                    <TextBlock Text="Volume" HorizontalAlignment="Center" />
                    <Slider Margin="0,5,0,0"
                            Maximum="100" LargeChange="10" SmallChange="1" TickFrequency="10"
                            Value="{Binding Playlist.MasterVolume, Mode=TwoWay}" TabIndex="5" />
                </Grid>
                <Button Classes="round icon" Width="35" HorizontalAlignment="Right" Margin="0,0,148,0" Content="I"
                        Command="{Binding ViewModel.ShowAbout, RelativeSource={RelativeSource AncestorType=views:MainView}}">
                </Button>
                <Button Classes="round" Width="35" HorizontalAlignment="Right" Margin="0,0,110,0"
                        Command="{Binding ViewModel.ShowSettings, RelativeSource={RelativeSource AncestorType=views:MainView}}">
                    <ui:SymbolIcon Symbol="Settings" FontSize="20" />
                </Button>
            </Grid>
            <Grid Row="1">
                <ListBox TabIndex="5" Background="{x:Null}" Height="80" x:CompileBindings="False"
                         Items="{Binding Settings.Folders}"
                         SelectedIndex="{Binding SelectedFolderIndex, Mode=TwoWay}"
                         IsVisible="{Binding IsExpanded, ElementName=FoldersExpander}" />
            </Grid>
            <Grid Row="2" ColumnDefinitions="150,*" Margin="0,2,0,2">
                <Grid Column="0">
                    <TextBlock Text="Files" FontWeight="Bold" VerticalAlignment="Center" />
                    <Button Classes="round" Content="Play" Margin="50,0,0,0"
                            Command="{Binding Play}" TabIndex="6" Width="75" />
                </Grid>
                <Grid Column="1">
                    <TextBox TabIndex="7" Text="{Binding SearchText, Mode=TwoWay}" />
                </Grid>
            </Grid>
            <Grid Row="3">
                <ListBox Items="{Binding Files.Source}" x:CompileBindings="False"
                         SelectedItem="{Binding Files.CurrentItem, Mode=TwoWay}" TabIndex="8" Background="{x:Null}">
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="TabIndex" Value="5" />
                        </Style>
                    </ListBox.Styles>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Display}">
                                <Interaction.Behaviors>
                                    <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.DoubleTappedEvent}">
                                        <InvokeCommandAction
                                            Command="{Binding ViewModel.Play, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                            CommandParameter="{x:Null}" />
                                    </RoutedEventTriggerBehavior>
                                </Interaction.Behaviors>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Grid Row="4" Margin="0,-2" IsVisible="{Binding !Settings.IsLicenseValid}">
                <ad:AdRotator DataContext="{Binding AdRotator}" />
            </Grid>
            <Grid Row="5">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Classes="round" Content="Clear"
                            Width="70" TabIndex="9" Command="{Binding Clear}" />
                    <Button Classes="round" Content="Load Preset" Margin="3,0,3,0"
                            Width="95" TabIndex="10" Command="{Binding LoadPreset}" />
                    <Button Classes="round" Content="Save As..." 
                            Width="95" TabIndex="11" Command="{Binding SavePreset}" />
                </StackPanel>
                <Button Classes="round" Width="85" TabIndex="9"
                        Content="{Binding IsPaused, Converter={StaticResource BooleanToStringConverter}}"
                        Command="{Binding Pause}" />
            </Grid>
        </Grid>
        <ScrollViewer Grid.Column="1" TabIndex="12">
            <ItemsControl Items="{Binding Playlist.Files}" Margin="0,0,10,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <media:MediaPlayer IsLoopVisible="False" Opacity=".85">
                            <!-- StopCommandExecuted="{s:MethodBinding {Binding $parent[views:MainView].ViewModel}, OnRemoveMedia, {Binding}}"> -->
                            <mediab:BassPlayerHost Source="{Binding Path, Mode=TwoWay}"
                                                   Volume="{Binding Volume, Mode=TwoWay}"
                                                   SpeedInt="{Binding Speed, Mode=TwoWay}"
                                                   IsPlaying="{Binding IsPlaying, Mode=TwoWay}"
                                                   PositionRefreshMilliseconds="500" VolumeBoost="0.4"
                                                   Loop="True" UseEffects="True"
                                                   EffectsFloat="{Binding ViewModel.EffectsFloat, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                                   EffectsQuick="{Binding ViewModel.EffectsQuickAlgo, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                                   EffectsSampleRateConversion="{Binding ViewModel.EffectsSampleRateConversion, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                                   EffectsAntiAlias="{Binding ViewModel.Settings.AntiAlias, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                                   EffectsAntiAliasLength="{Binding ViewModel.Settings.AntiAliasLength, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                                   OutputSampleRate="{Binding ViewModel.Settings.OutputSampleRate, RelativeSource={RelativeSource AncestorType=views:MainView}}">
                            </mediab:BassPlayerHost>
                            <Interaction.Behaviors>
                                <RoutedEventTriggerBehavior RoutedEvent="{x:Static media:MediaPlayerBase.StopCommandExecutedEvent}">
                                    <InvokeCommandAction
                                        Command="{Binding ViewModel.RemoveMedia, RelativeSource={RelativeSource AncestorType=views:MainView}}"
                                        CommandParameter="{Binding}" />
                                </RoutedEventTriggerBehavior>
                            </Interaction.Behaviors>
                        </media:MediaPlayer>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Window>