<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Business="clr-namespace:Business;assembly=Business" x:Class="NaturalGroundingPlayer.MediaGrid" 
             mc:Ignorable="d" Height="314" Width="590" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <Business:MediaTimeConverter x:Key="MediaTimeConverter"/>
        <Business:RatingConverter x:Key="RatingConverter"/>
        <Business:RatingToColorConverter x:Key="RatingToColorConverter"/>
        <Storyboard x:Key="StoryboardOpenDetail" Completed="Storyboard_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="VideosView">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-40"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VideosView">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="CategoriesList">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CategoriesList">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VideosView">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedCategoryLabel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedCategoryLabel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StoryboardCloseDetail" Completed="Storyboard_Completed">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="VideosView">
                <EasingDoubleKeyFrame KeyTime="0" Value="-40"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VideosView">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="CategoriesList">
                <DiscreteBooleanKeyFrame KeyTime="0" Value="true"/>
            </BooleanAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CategoriesList">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VideosView">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedCategoryLabel">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value=".2"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedCategoryLabel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <Grid>
        <Grid x:Name="GridCategories" HorizontalAlignment="Left" Width="200" PreviewMouseDown="CategoriesList_PreviewMouseDown">
            <ListBox x:Name="CategoriesList" MouseDoubleClick="CategoriesList_MouseDoubleClick" DisplayMemberPath="Text" SelectedValuePath="FilterValue" />
            <Label x:Name="SelectedCategoryLabel" Margin="0,294,0,0" Visibility="Hidden" VerticalContentAlignment="Center" Padding="5,0,0,0" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="190" >
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.548,0.355" StartPoint="0.011,0.4">
                        <GradientStop Color="#FFA7DCA2"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>
        </Grid>
        <Grid Margin="90,0,-40,0">
            <ListView x:Name="VideosView" TabIndex="10" SelectedValuePath="MediaId" ButtonBase.Click="VideosView_ColumnHeaderClick" SelectionChanged="VideosView_SelectionChanged" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                <ListView.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ListView.RenderTransform>
                <ListView.View>
                    <GridView x:Name="ListGridView">
                        <GridViewColumn x:Name="SelectionColumn" Width="27">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Tag="{Binding VideoId}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="ArtistColumn" DisplayMemberBinding="{Binding Artist, Mode=OneWay}" Header="Artist" Width="0" />
                        <GridViewColumn x:Name="TitleColumn" DisplayMemberBinding="{Binding Title, Mode=OneWay}" Header="Title" Width="300"/>
                        <GridViewColumn Width="50" HeaderStringFormat="Length" Header="Length">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Right" Text="{Binding Length, Converter={StaticResource MediaTimeConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="PreferenceColumn" DisplayMemberBinding="{Binding Preference, Converter={StaticResource RatingConverter}, Mode=OneWay}" Header="Pref" Width="35"/>
                        <GridViewColumn x:Name="IntensityColumn" Width="35" HeaderStringFormat="Intensity" Header="Inten">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{Binding Intensity, Converter={StaticResource RatingToColorConverter}, Mode=OneWay}" Text="{Binding Intensity, Converter={StaticResource RatingConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="CustomColumn" Width="35" HeaderStringFormat="Custom">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="{Binding Custom, Converter={StaticResource RatingToColorConverter}, Mode=OneWay}" Text="{Binding Custom, Converter={StaticResource RatingConverter}, Mode=OneWay}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="StatusColumn" DisplayMemberBinding="{Binding StatusText, Mode=OneWay}" Header="Status" Width="150"/>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <EventSetter Event="Control.MouseDoubleClick" Handler="VideosView_ItemDoubleClick"/>
                        <EventSetter Event="UIElement.MouseRightButtonUp" Handler="VideosView_ItemRightButtonUp"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsInDatabase}" Value="False">
                                <Setter Property="Background" Value="#FFE4FFE4"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding FileExists}" Value="False">
                                <Setter Property="Background" Value="#FFFFDADA"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Grid>
    </Grid>
</UserControl>
