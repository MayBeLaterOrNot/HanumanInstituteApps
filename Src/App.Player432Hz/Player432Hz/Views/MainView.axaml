<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:HanumanInstitute.MediaPlayer.Avalonia;assembly=MediaPlayer.Avalonia"
        x:Class="HanumanInstitute.Player432Hz.Views.MainView"
        mc:Ignorable="d" d:DesignWidth="560" d:DesignHeight="350"
        Title="432Hz Player" Icon="/Assets/App.ico" MinHeight="260" MinWidth="560" Classes="gradient"
        xmlns:local="clr-namespace:HanumanInstitute.Player432Hz"
        xmlns:bass="clr-namespace:HanumanInstitute.MediaPlayer.Avalonia.Bass;assembly=MediaPlayer.Avalonia.Bass"
        xmlns:flu="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
        xmlns:vm="clr-namespace:HanumanInstitute.Player432Hz.ViewModels"
        xmlns:views="clr-namespace:HanumanInstitute.Player432Hz.Views"
        xmlns:models="clr-namespace:HanumanInstitute.Player432Hz.Models"
        xmlns:av="clr-namespace:HanumanInstitute.Avalonia;assembly=HanumanInstitute.Avalonia"
        xmlns:ad="clr-namespace:HanumanInstitute.Apps.AdRotator;assembly=HanumanInstitute.Apps"
        av:SizeExtension.TrackSize="True"
        av:SizeExtension.Width="{Binding Settings.Width, Mode=TwoWay}"
        av:SizeExtension.Height="{Binding Settings.Height, Mode=TwoWay}"
        d:DataContext="{x:Static local:ViewModelLocator.Main}" x:DataType="vm:MainViewModel">
    <Grid>
        <Grid Margin="10,6,10,10" ColumnDefinitions="150,*" RowDefinitions="*,Auto,40">
            <Grid Column="0">
                <Grid VerticalAlignment="Top">
                    <TextBlock Text="Playlists" FontWeight="Bold" VerticalAlignment="Center" />
                    <Button Classes="round" Width="35" TabIndex="2"
                            HorizontalAlignment="Right" Margin="0,0,38,0" Command="{Binding AddPlaylist}">
                        <flu:SymbolIcon Symbol="Add" FontSize="20" />
                    </Button>
                    <Button Classes="round" Width="35" TabIndex="3"
                            HorizontalAlignment="Right" Command="{Binding DeletePlaylist}">
                        <flu:SymbolIcon Symbol="Remove" FontSize="20" />
                    </Button>
                </Grid>
                <ListBox TabIndex="1" Background="{x:Null}" Margin="0,28,0,0" x:CompileBindings="False"
                         ItemsSource="{Binding Playlists.Source}" SelectedItem="{Binding Playlists.CurrentItem}">
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.Styles>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Padding="14" x:CompileBindings="True"
                                       x:DataType="vm:IPlaylistViewModel">
                                <Interaction.Behaviors>
                                    <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.DoubleTappedEvent}">
                                        <InvokeCommandAction
                                            Command="{Binding ViewModel.StartPlayList, RelativeSource={RelativeSource AncestorType=views:MainView}}" />
                                    </RoutedEventTriggerBehavior>
                                </Interaction.Behaviors>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Grid Row="0" Column="1" Margin="12,0,0,0" RowDefinitions="100,*">
                <Grid Row="0" IsEnabled="{Binding Converter={x:Static ObjectConverters.IsNotNull}, Mode=OneWay}"
                      DataContext="{Binding Playlists.CurrentItem}">
                    <Grid VerticalAlignment="Top">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Folders" FontWeight="Bold" VerticalAlignment="Center" />
                            <TextBox Width="120"
                                     Text="{Binding Name, Mode=TwoWay}" TabIndex="4" Margin="15,0,15,0" />
                            <Button Classes="round" Width="35" TabIndex="6" Margin="0,0,3,0"
                                    Command="{Binding AddFolderCommand, Mode=OneWay}">
                                <flu:SymbolIcon Symbol="Add" FontSize="20" />
                            </Button>
                            <Button Classes="round" Width="35" TabIndex="7"
                                    Command="{Binding RemoveFolderCommand, Mode=OneWay}">
                                <flu:SymbolIcon Symbol="Remove" FontSize="20" />
                            </Button>
                        </StackPanel>
                        <Button Classes="round icon" Width="35" HorizontalAlignment="Right" Content="I"
                                Margin="0,0,38,0"
                                Command="{Binding ViewModel.ShowAbout, RelativeSource={RelativeSource AncestorType=views:MainView}}" />
                        <Button Classes="round" Width="35" HorizontalAlignment="Right"
                                Command="{Binding ViewModel.ShowSettings, RelativeSource={RelativeSource AncestorType=views:MainView}}">
                            <flu:SymbolIcon Symbol="Settings" FontSize="20" />
                        </Button>
                    </Grid>
                    <ListBox TabIndex="5" Background="{x:Null}" Margin="0,28,0,0" x:CompileBindings="False"
                             ItemsSource="{Binding Folders.Source}" SelectedItem="{Binding Folders.CurrentItem}">
                    </ListBox>
                </Grid>
                <Grid Row="1" DataContext="{x:Static local:ViewModelLocator.FilesList}" Margin="0,6,0,0"
                      x:DataType="vm:IFilesListViewModel">
                    <Grid VerticalAlignment="Top">
                        <TextBlock Text="Files" FontWeight="Bold" VerticalAlignment="Center" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <ToggleButton Classes="toolbar round icon" Content="U" Width="35" ToolTip.Tip="Shuffle" FontSize="16"
                                          IsChecked="{Binding ViewModel.Settings.Shuffle, RelativeSource={RelativeSource AncestorType=views:MainView}, Mode=TwoWay}" />
                            <Button Classes="round" Content="Play" Width="75" TabIndex="9" Command="{Binding Play}" />
                        </StackPanel>
                    </Grid>
                    <ListBox TabIndex="8" Background="{x:Null}" Margin="0,28,0,0" x:CompileBindings="False"
                             ItemsSource="{Binding Files.Source}" SelectedItem="{Binding Files.CurrentItem}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" x:CompileBindings="True" x:DataType="models:FileItem">
                                    <Interaction.Behaviors>
                                        <RoutedEventTriggerBehavior
                                            RoutedEvent="{x:Static InputElement.DoubleTappedEvent}">
                                            <InvokeCommandAction
                                                Command="{Binding ViewModel.StartPlayFile, RelativeSource={RelativeSource AncestorType=views:MainView}}" />
                                        </RoutedEventTriggerBehavior>
                                    </Interaction.Behaviors>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>
            <Grid Column="0" Row="1" ColumnSpan="2" Margin="0,-2,0,-8" IsVisible="{Binding !Settings.IsLicenseValid}">
                <ad:AdRotator DataContext="{Binding AdRotator}" />
            </Grid>
        </Grid>
        <Grid Height="43" VerticalAlignment="Bottom"
              DataContext="{x:Static local:ViewModelLocator.Player}" x:DataType="vm:PlayerViewModel">
            <ui:MediaPlayer
                IsLoopVisible="False" IsSpeedVisible="False">
                <bass:BassPlayerHost Source="{Binding Player.NowPlaying, Mode=OneWay}"
                                     Title="{Binding Player.NowPlayingTitle, Mode=TwoWay}"
                                     Pitch="{Binding Player.Pitch}" EffectsFloat="True"
                                     EffectsAntiAlias="{Binding Player.Settings.AntiAlias}"
                                     EffectsAntiAliasLength="{Binding Player.Settings.AntiAliasLength}"
                                     SpeedFloat="{Binding Player.Settings.Speed}"
                                     EffectsSampleRateConversion="4"
                                     EffectsRoundPitch="{Binding Player.Settings.RoundPitch}"
                                     EffectsSkipTempo="{Binding Player.Settings.SkipTempo}"
                                     PitchError="{Binding Player.PitchError, Mode=OneWayToSource}"
                                     OutputSampleRate="{Binding Player.Settings.OutputSampleRate}"
                                     Volume="{Binding ViewModel.Settings.Volume, RelativeSource={RelativeSource AncestorType=views:MainView}, Mode=TwoWay}">
                    <Interaction.Behaviors>
                        <RoutedEventTriggerBehavior RoutedEvent="{x:Static bass:BassPlayerHost.MediaFinishedEvent}">
                            <InvokeCommandAction Command="{Binding PlayNext}" />
                        </RoutedEventTriggerBehavior>
                    </Interaction.Behaviors>
                </bass:BassPlayerHost>
                <Interaction.Behaviors>
                    <RoutedEventTriggerBehavior RoutedEvent="{x:Static ui:MediaPlayerBase.StopCommandExecutedEvent}">
                        <InvokeCommandAction Command="{Binding PlayNext}" />
                    </RoutedEventTriggerBehavior>
                </Interaction.Behaviors>
            </ui:MediaPlayer>
        </Grid>
    </Grid>
</Window>